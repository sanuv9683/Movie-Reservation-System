/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ijse.theaterbooking.view;

import com.ijse.theaterbooking.connector.ServerConnector;
import com.ijse.theaterbooking.controller.BookController;
import com.ijse.theaterbooking.controller.BookDetailsController;
import com.ijse.theaterbooking.controller.MovieController;
import com.ijse.theaterbooking.model.Book;
import com.ijse.theaterbooking.model.BookDetails;
import com.ijse.theaterbooking.model.Movies;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Sanu Vithanage
 */
public class CinamaManager extends javax.swing.JPanel {

    /**
     * Creates new form BookingStepOne
     *///userName, bookId, bookDate, userID, movieName, movieTime, resDetails
    public CinamaManager() throws ClassNotFoundException, SQLException, IOException, FileNotFoundException, RemoteException, ParseException, NotBoundException {
        initComponents();
        loadCombo();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        movieSelect = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cinamaTable = new javax.swing.JTable();
        searchB = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        bookId = new javax.swing.JTextField();
        bookDateTxt = new javax.swing.JTextField();
        seatNoTxt = new javax.swing.JTextField();
        moviIDTxt = new javax.swing.JTextField();
        userIDTxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        deleteB = new javax.swing.JButton();
        updateB = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        priceTxt = new javax.swing.JTextField();
        movieNa = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(1000, 580));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        movieSelect.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                movieSelectItemStateChanged(evt);
            }
        });
        movieSelect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                movieSelectMouseClicked(evt);
            }
        });
        movieSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieSelectActionPerformed(evt);
            }
        });
        add(movieSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 120, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Bookind ID");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Select Movie");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, -1, -1));

        cinamaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BookID", "SeatNo", "MovieID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(cinamaTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 90, 490, 290));

        searchB.setBackground(new java.awt.Color(255, 255, 255));
        searchB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/theaterbooking/view/images/sanurefre.png"))); // NOI18N
        searchB.setContentAreaFilled(false);
        searchB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchBMouseClicked(evt);
            }
        });
        searchB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBActionPerformed(evt);
            }
        });
        add(searchB, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 410, 110, 40));

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/theaterbooking/view/images/fccfcfc.png"))); // NOI18N
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 50, 550, 360));

        bookId.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookIdMouseClicked(evt);
            }
        });
        add(bookId, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 140, 160, 30));

        bookDateTxt.setEditable(false);
        add(bookDateTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 240, 170, 30));

        seatNoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seatNoTxtActionPerformed(evt);
            }
        });
        add(seatNoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 290, 170, 30));
        add(moviIDTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 340, 170, 30));
        add(userIDTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, 170, 30));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Seat No");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 300, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Book Date");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 250, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("User ID");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Price");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 400, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Movie ID");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 350, -1, -1));

        deleteB.setBackground(new java.awt.Color(255, 255, 255));
        deleteB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/theaterbooking/view/images/vithRe.png"))); // NOI18N
        deleteB.setContentAreaFilled(false);
        deleteB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteBMouseClicked(evt);
            }
        });
        deleteB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBActionPerformed(evt);
            }
        });
        add(deleteB, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 410, 110, 40));

        updateB.setBackground(new java.awt.Color(255, 255, 255));
        updateB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/theaterbooking/view/images/ffup.png"))); // NOI18N
        updateB.setContentAreaFilled(false);
        updateB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateBMouseClicked(evt);
            }
        });
        updateB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBActionPerformed(evt);
            }
        });
        add(updateB, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 410, 110, 40));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/theaterbooking/view/images/ghffff.png"))); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 410, 110, 40));

        priceTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceTxtActionPerformed(evt);
            }
        });
        add(priceTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 390, 170, 30));

        movieNa.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 36)); // NOI18N
        movieNa.setForeground(new java.awt.Color(255, 255, 255));
        movieNa.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        movieNa.setText("Cinama Manager");
        add(movieNa, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, 420, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/theaterbooking/view/images/tt2.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 470));
    }// </editor-fold>//GEN-END:initComponents

    private void movieSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movieSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_movieSelectActionPerformed

    private void movieSelectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_movieSelectMouseClicked

    }//GEN-LAST:event_movieSelectMouseClicked

    private void movieSelectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_movieSelectItemStateChanged
        
    }//GEN-LAST:event_movieSelectItemStateChanged

    private void searchBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchBMouseClicked
        try {
            loadTabl();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CinamaManager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CinamaManager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(CinamaManager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(CinamaManager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(CinamaManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchBMouseClicked

    private void deleteBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBMouseClicked
        try {
            deleteLoad();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CinamaManager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CinamaManager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(CinamaManager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(CinamaManager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(CinamaManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteBMouseClicked

    private void updateBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateBMouseClicked
        try {
            updateCinama();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CinamaManager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CinamaManager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(CinamaManager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(CinamaManager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(CinamaManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateBMouseClicked

    private void seatNoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seatNoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seatNoTxtActionPerformed

    private void priceTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceTxtActionPerformed

    private void updateBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateBActionPerformed

    private void searchBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBActionPerformed

    private void bookIdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookIdMouseClicked
        try {
            searchCinama();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CinamaManager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CinamaManager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(CinamaManager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(CinamaManager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(CinamaManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bookIdMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        //report priniting////
            DefaultTableModel tableModel = (DefaultTableModel) cinamaTable.getModel();
        try {
        
            InputStream is = getClass().getResourceAsStream("AllReservations.jrxml");
            JasperReport jr = JasperCompileManager.compileReport(is);
            HashMap hm = new HashMap();
          
            JasperPrint jp = JasperFillManager.fillReport(jr, hm, new JRTableModelDataSource(tableModel));
            JasperViewer.viewReport(jp);

        } catch (JRException ex) {
            System.out.println(ex.getMessage());
        }
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void deleteBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bookDateTxt;
    private javax.swing.JTextField bookId;
    private javax.swing.JTable cinamaTable;
    private javax.swing.JButton deleteB;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField moviIDTxt;
    private javax.swing.JLabel movieNa;
    private javax.swing.JComboBox movieSelect;
    private javax.swing.JTextField priceTxt;
    private javax.swing.JButton searchB;
    private javax.swing.JTextField seatNoTxt;
    private javax.swing.JButton updateB;
    private javax.swing.JTextField userIDTxt;
    // End of variables declaration//GEN-END:variables

    private void loadCombo() throws ClassNotFoundException, FileNotFoundException, SQLException, IOException, RemoteException, ParseException, NotBoundException {
        MovieController movieController = ServerConnector.getServerConnector().getMovieController();
        ArrayList<Movies> allMovies = movieController.getAllMovies();
        for (Movies allMovy : allMovies) {
            movieSelect.addItem(allMovy.getMovieName());
        }
    }

    private void loadTabl() throws ClassNotFoundException, FileNotFoundException, SQLException, IOException, RemoteException, ParseException, NotBoundException {
        BookDetailsController bookDetailsController = ServerConnector.getServerConnector().getBookDetailsController();
        ArrayList<BookDetails> allBookDetail = bookDetailsController.getAllBookDetail();
        DefaultTableModel dtm = (DefaultTableModel) cinamaTable.getModel();
        dtm.setRowCount(0);
        for (BookDetails allBookDetail1 : allBookDetail) {
            Object[] ob = {allBookDetail1.getBookingId(), allBookDetail1.getSheetId(), allBookDetail1.getMovieId()};
            dtm.addRow(ob);
        }

    }

    private void deleteLoad() throws ClassNotFoundException, FileNotFoundException, SQLException, IOException, RemoteException, ParseException, NotBoundException {
        BookController bk = ServerConnector.getServerConnector().getBookController();
        boolean deleteBooking = bk.deleteBooking(bookId.getText());
        if (deleteBooking) {
            JOptionPane.showMessageDialog(this, "Succsesfully Deleted");
        } else {
            JOptionPane.showMessageDialog(this, "Delete Faild");
        }
    }

    private void updateCinama() throws ClassNotFoundException, FileNotFoundException, SQLException, IOException, RemoteException, ParseException, NotBoundException {
        String bookI = bookId.getText();
        String bookDate = bookDateTxt.getText();
        String userID = userIDTxt.getText();
        String moviId = moviIDTxt.getText();
        String seatID = seatNoTxt.getText();
        double Price = Double.parseDouble(priceTxt.getText());

        BookController bookController = ServerConnector.getServerConnector().getBookController();
        Book book = new Book(bookI, bookDate, userID);
        ArrayList<BookDetails> bokDetail = new ArrayList<>();
        BookDetails bookDetails = new BookDetails(bookI, moviId, seatID, Price,bookDate);
        bokDetail.add(bookDetails);
        boolean updateBooking = bookController.updateBooking(book, bokDetail);
        if (updateBooking) {
            JOptionPane.showMessageDialog(this, "Succsesfully Updated");
        } else {
            JOptionPane.showMessageDialog(this, "Update Faild");
        }
    }

    private void searchCinama() throws ClassNotFoundException, FileNotFoundException, SQLException, IOException, RemoteException, ParseException, NotBoundException {
        String boID = bookId.getText();
        BookController bookController = ServerConnector.getServerConnector().getBookController();
        Book booking = bookController.getBooking(boID);
        if (booking != null) {
            bookId.setText(booking.getBookId());
            bookDateTxt.setText(booking.getBookDate());
            userIDTxt.setText(booking.getUserId());
        } else {
            //JOptionPane.showMessageDialog(this, "No Booking for that ID");
        }

        BookDetailsController bookDetailsController = ServerConnector.getServerConnector().getBookDetailsController();
        BookDetails searchBookDetail = bookDetailsController.searchBookDetail(boID);
        if (searchBookDetail != null) {
            System.out.println("search is not null");
            moviIDTxt.setText(searchBookDetail.getMovieId());
            seatNoTxt.setText(searchBookDetail.getSheetId());
            priceTxt.setText(Double.toString(searchBookDetail.getPrice()));
        }

    }

}
