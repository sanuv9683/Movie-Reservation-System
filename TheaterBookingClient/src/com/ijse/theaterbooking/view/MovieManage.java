/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ijse.theaterbooking.view;

import com.ijse.theaterbooking.connector.ServerConnector;
import com.ijse.theaterbooking.controller.MovieController;
import com.ijse.theaterbooking.model.Movies;
import com.ijse.theaterbooking.validation.Validation;
import static com.ijse.theaterbooking.view.FirstFilm.emp;
import static com.ijse.theaterbooking.view.FirstFilm.mpf;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import java.awt.BorderLayout;
import java.awt.Canvas;
import java.awt.Color;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import java.nio.file.FileSystems;
import java.nio.file.Files;
import java.nio.file.Path;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import uk.co.caprica.vlcj.binding.LibVlc;
import uk.co.caprica.vlcj.player.MediaPlayerFactory;
import uk.co.caprica.vlcj.player.embedded.EmbeddedMediaPlayer;
import uk.co.caprica.vlcj.player.embedded.windows.Win32FullScreenStrategy;
import uk.co.caprica.vlcj.runtime.RuntimeUtil;

/**
 *
 * @author Sanu Vithanage
 */
public class MovieManage extends javax.swing.JPanel {

    static MediaPlayerFactory mpf;
    static EmbeddedMediaPlayer emp;
    String mmName;

    /**
     * Creates new form BookingStepOne
     *///userName, bookId, bookDate, userID, movieName, movieTime, resDetails
    public MovieManage() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        screen = new javax.swing.JPanel();
        canva = new java.awt.Canvas();
        movieNameLabel = new javax.swing.JTextField();
        movieTimeLabel = new javax.swing.JTextField();
        movieTypeCombo = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        movieIDCombo = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        canselB = new javax.swing.JButton();
        imageSave = new javax.swing.JButton();
        imageViewer = new javax.swing.JLabel();
        mmDisp = new javax.swing.JLabel();
        ddas = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        endDt = new com.toedter.calendar.JDateChooser();
        deleteB = new javax.swing.JButton();
        updateB = new javax.swing.JButton();
        saveB = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        movieNa = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(1000, 580));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        screen.setLayout(new java.awt.BorderLayout());

        canva.setBackground(new java.awt.Color(0, 0, 0));
        canva.setPreferredSize(new java.awt.Dimension(290, 170));
        canva.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                canvaMouseClicked(evt);
            }
        });
        screen.add(canva, java.awt.BorderLayout.PAGE_END);

        add(screen, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 100, 290, 170));

        movieNameLabel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                movieNameLabelKeyReleased(evt);
            }
        });
        add(movieNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 210, 30));
        add(movieTimeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 210, 210, 30));

        movieTypeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select type", "3D", "2D" }));
        movieTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieTypeComboActionPerformed(evt);
            }
        });
        add(movieTypeCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 310, 120, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Time");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("End Date");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 270, -1, -1));

        movieIDCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "mov1", "mov2", "mov3", "mov4" }));
        movieIDCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                movieIDComboItemStateChanged(evt);
            }
        });
        add(movieIDCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 160, 120, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Trailer");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 380, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Movie Name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Movie Type");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 320, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Movie ID");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, -1, -1));

        canselB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/theaterbooking/view/images/canselmmmm.png"))); // NOI18N
        canselB.setContentAreaFilled(false);
        canselB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                canselBMouseClicked(evt);
            }
        });
        canselB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                canselBActionPerformed(evt);
            }
        });
        add(canselB, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 400, 90, 40));

        imageSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/theaterbooking/view/images/sasasave.png"))); // NOI18N
        imageSave.setContentAreaFilled(false);
        imageSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageSaveMouseClicked(evt);
            }
        });
        imageSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageSaveActionPerformed(evt);
            }
        });
        add(imageSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 150, 100, 40));

        imageViewer.setBackground(new java.awt.Color(51, 51, 51));
        imageViewer.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        imageViewer.setOpaque(true);
        imageViewer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageViewerMouseClicked(evt);
            }
        });
        add(imageViewer, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 100, 170, 270));

        mmDisp.setForeground(new java.awt.Color(255, 255, 255));
        mmDisp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/theaterbooking/view/images/slidedede.png"))); // NOI18N
        mmDisp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mmDispMouseClicked(evt);
            }
        });
        add(mmDisp, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 360, 160, 50));

        ddas.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ddas.setForeground(new java.awt.Color(255, 255, 255));
        ddas.setText("Select Trailer");
        add(ddas, new org.netbeans.lib.awtextra.AbsoluteConstraints(174, 370, 130, 30));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/theaterbooking/view/images/pase.png"))); // NOI18N
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 280, 40, 30));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/theaterbooking/view/images/stop.png"))); // NOI18N
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 280, -1, -1));
        add(endDt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 260, 150, 30));

        deleteB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/theaterbooking/view/images/mmre.png"))); // NOI18N
        deleteB.setContentAreaFilled(false);
        deleteB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteBMouseClicked(evt);
            }
        });
        add(deleteB, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 400, 90, 40));

        updateB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/theaterbooking/view/images/mmrenew.png"))); // NOI18N
        updateB.setContentAreaFilled(false);
        updateB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateBMouseClicked(evt);
            }
        });
        updateB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBActionPerformed(evt);
            }
        });
        add(updateB, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 400, 90, 40));

        saveB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/theaterbooking/view/images/saveppp.png"))); // NOI18N
        saveB.setContentAreaFilled(false);
        saveB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveBMouseClicked(evt);
            }
        });
        add(saveB, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 400, 90, 40));

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/theaterbooking/view/images/tvDis.png"))); // NOI18N
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 40, 310, 290));

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/theaterbooking/view/images/play.png"))); // NOI18N
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 280, 30, 30));

        movieNa.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 36)); // NOI18N
        movieNa.setForeground(new java.awt.Color(255, 255, 255));
        movieNa.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        movieNa.setText("Movie Manager");
        add(movieNa, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, 420, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/theaterbooking/view/images/tt2.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 470));
    }// </editor-fold>//GEN-END:initComponents

    private void imageSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageSaveActionPerformed
        // fileChooserImage();
    }//GEN-LAST:event_imageSaveActionPerformed

    private void movieTypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movieTypeComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_movieTypeComboActionPerformed

    private void saveBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBMouseClicked
        try {
            String test = movieIDCombo.getSelectedItem().toString();
            MovieController mc = ServerConnector.getServerConnector().getMovieController();
            Movies searchMovie = mc.searchMovie(test);
            if (searchMovie != null) {
                JOptionPane.showMessageDialog(this, test + " is alredy aded..!\n Delete it if you want to add New..");
            } else {
                String mName = movieNameLabel.getText();
                String mTime = movieTimeLabel.getText();
                String movieID = movieIDCombo.getSelectedItem().toString();
                Date dat = endDt.getDate();
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                String mDuration = dateFormat.format(dat);
                String mType = movieTypeCombo.getSelectedItem().toString();
                String imgID = fileName;
                String movTrailer = mmName;

                try {
                    MovieController movieController = ServerConnector.
                            getServerConnector().getMovieController();
                    Movies movi = new Movies(movieID, mName, mTime, mType, mDuration,
                            movTrailer, imgID);
                    boolean res = movieController.addMovie(movi);
                    if (res) {
                        JOptionPane.showMessageDialog(this, "Movie Aded");
                    }
                } catch (NotBoundException ex) {
                    Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                            null, ex);
                } catch (MalformedURLException ex) {
                    Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                            null, ex);
                } catch (RemoteException ex) {
                    Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                            null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                            null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                            null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                            null, ex);
                } catch (ParseException ex) {
                    Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                            null, ex);
                }
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        }
    }//GEN-LAST:event_saveBMouseClicked

    private void deleteBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBMouseClicked
        try {
            //String mName = movieIDLable.getText();
            String mName = movieIDCombo.getSelectedItem().toString();
            MovieController movieController = ServerConnector.
                    getServerConnector().getMovieController();
            boolean res = movieController.deleteMovie(mName);
            if (res) {
                JOptionPane.showMessageDialog(this, "Movie Delted");
            } else {
                JOptionPane.showMessageDialog(this, "Movie Not Founded");
            }
        } catch (NotBoundException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        }


    }//GEN-LAST:event_deleteBMouseClicked

    private void updateBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateBMouseClicked
        try {
            String mName = movieNameLabel.getText();
            String mTime = movieTimeLabel.getText();
            //  String movieID = movieIDLable.getText();
            String movieID = movieIDCombo.getSelectedItem().toString();
            ////////////////////////////////////////////////////////////////////
            Date dat = endDt.getDate();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String mDuration = dateFormat.format(dat);
            String mType = movieTypeCombo.getSelectedItem().toString();
            String imgID = fileName;
            String movTrailer = mmName;

            MovieController movieController = ServerConnector.
                    getServerConnector().getMovieController();
            Movies movies = new Movies(movieID, mName, mTime, mType, mDuration,
                    movTrailer, imgID);
            boolean res = movieController.updateMovieDetils(movies);
            if (res) {
                JOptionPane.showMessageDialog(this, "Sucsesfully Updated");
            } else {
                JOptionPane.showMessageDialog(this, "Updated faild");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        }
    }//GEN-LAST:event_updateBMouseClicked

    private void canselBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canselBMouseClicked
        emp.stop();
    }//GEN-LAST:event_canselBMouseClicked
    JFileChooser f1;
    File file;
    String fileName;
    int width = 170;
    int height = 270;
    BufferedImage image = null;
    File f = null;
    private void imageSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imageSaveMouseClicked
        if (fileName.equals("movie1.jpg")) {
            try {
                Path path = FileSystems.getDefault().getPath("E:\\IJSE\\J A V A\\3 rd Semester\\Main Projects"
                        + "\\Softaer Updates\\018\\Theater Ticket Booking"
                        + "\\TheaterBookingClient\\src\\com\\ijse\\"
                        + "theaterbooking\\view\\images\\movie1.jpg");
                Files.deleteIfExists(path);
                f = new File("E:\\IJSE\\J A V A\\3 rd Semester\\Main Projects"
                        + "\\Softaer Updates\\018\\Theater Ticket Booking"
                        + "\\TheaterBookingClient\\src\\com\\ijse\\"
                        + "theaterbooking\\view\\images\\movie1.jpg");
                ImageIO.write(image, "jpg", f);
                JOptionPane.showMessageDialog(this, "Image Saved");
            } catch (IOException ex) {
                Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (fileName.equals("movie2.jpg")) {
            try {
                Path path = FileSystems.getDefault().getPath("E:\\IJSE\\J A V A\\3 rd Semester\\Main Projects"
                        + "\\Softaer Updates\\018\\Theater Ticket Booking"
                        + "\\TheaterBookingClient\\src\\com\\ijse\\"
                        + "theaterbooking\\view\\images\\movie2.jpg");
                Files.deleteIfExists(path);
                f = new File("E:\\IJSE\\J A V A\\3 rd Semester\\Main Projects"
                        + "\\Softaer Updates\\018\\Theater Ticket Booking"
                        + "\\TheaterBookingClient\\src\\com\\ijse\\"
                        + "theaterbooking\\view\\images\\movie2.jpg");
                ImageIO.write(image, "jpg", f);
                 JOptionPane.showMessageDialog(this, "Image Saved");
            } catch (IOException ex) {
                Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (fileName.equals("movie3.jpg")) {
            try {
                Path path = FileSystems.getDefault().getPath("E:\\IJSE\\J A V A\\3 rd Semester\\Main Projects"
                        + "\\Softaer Updates\\018\\Theater Ticket Booking"
                        + "\\TheaterBookingClient\\src\\com\\ijse\\"
                        + "theaterbooking\\view\\images\\movie3.jpg");
                Files.deleteIfExists(path);
                f = new File("E:\\IJSE\\J A V A\\3 rd Semester\\Main Projects\\"
                        + "Softaer Updates\\018\\Theater Ticket Booking\\"
                        + "TheaterBookingClient\\src\\com\\ijse\\theaterbooking\\"
                        + "view\\images\\movie3.jpg");
                ImageIO.write(image, "jpg", f);
                 JOptionPane.showMessageDialog(this, "Image Saved");
            } catch (IOException ex) {
                Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (fileName.equals("movie4.jpg")) {
            try {
                Path path = FileSystems.getDefault().getPath("E:\\IJSE\\J A V A\\3 rd Semester\\Main Projects"
                        + "\\Softaer Updates\\018\\Theater Ticket Booking"
                        + "\\TheaterBookingClient\\src\\com\\ijse\\"
                        + "theaterbooking\\view\\images\\movie4.jpg");
                Files.deleteIfExists(path);
                f = new File("E:\\IJSE\\J A V A\\3 rd Semester\\Main Projects"
                        + "\\Softaer Updates\\018\\Theater Ticket Booking\\"
                        + "TheaterBookingClient\\src\\com\\ijse\\theaterbooking\\"
                        + "view\\images\\movie4.jpg");
                ImageIO.write(image, "jpg", f);
                JOptionPane.showMessageDialog(this, "Image Saved");
            } catch (IOException ex) {
                Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_imageSaveMouseClicked

    private void imageViewerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imageViewerMouseClicked
        String check = movieIDCombo.getSelectedItem().toString();
        if (!check.equals("Select")) {
            try {
                JFileChooser jFileChooser = new JFileChooser();
                jFileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
                int res = jFileChooser.showSaveDialog(MovieManage.this);
                if (res == JFileChooser.APPROVE_OPTION) {
                    f = jFileChooser.getSelectedFile();
                    image = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
                    image = ImageIO.read(f);
                    imageViewer.setIcon(new javax.swing.ImageIcon(image));
                    String name = f.getName();
                    fileName = name;
                }
            } catch (IOException ex) {
                Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Choose The Movie ID First");
        }


    }//GEN-LAST:event_imageViewerMouseClicked


    private void movieNameLabelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_movieNameLabelKeyReleased
        if (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE) {
            Toolkit.getDefaultToolkit();
            Validation.name(movieNameLabel);

        }
    }//GEN-LAST:event_movieNameLabelKeyReleased

    private void movieIDComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_movieIDComboItemStateChanged
        if (emp != null) {
            emp.stop();
        }

        try {
            String movieID = movieIDCombo.getSelectedItem().toString();
            MovieController movieController = (MovieController) ServerConnector
                    .getServerConnector().getMovieController();
            Movies searchMovie = movieController.searchMovie(movieID);

            if (searchMovie != null) {
                movieNameLabel.setText(searchMovie.getMovieName());
                ////////////////////////////////////////////////////

                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                Date dob = dateFormat.parse(searchMovie.getMovieDuration());
                endDt.setDate(dob);
                movieTimeLabel.setText(searchMovie.getMovieTime());
                movieTypeCombo.setSelectedItem(searchMovie.getMovieType());
                String movieImageId = searchMovie.getMovieImageId();

                if (movieImageId.equals("movie1.jpg")) {
                    imageViewer.setIcon(new javax.swing.ImageIcon(getClass()
                            .getResource("/com/ijse/theaterbooking/view/images"
                                    + "/movie1.jpg")));
                }
                if (movieImageId.equals("movie2.jpg")) {
                    imageViewer.setIcon(new javax.swing.ImageIcon(getClass()
                            .getResource("/com/ijse/theaterbooking/view/image"
                                    + "s/movie2.jpg")));
                }
                if (movieImageId.equals("movie3.jpg")) {
                    imageViewer.setIcon(new javax.swing.ImageIcon(getClass()
                            .getResource("/com/ijse/theaterbooking/view/images"
                                    + "/movie3.jpg")));
                }
                if (movieImageId.equals("movie4.jpg")) {
                    imageViewer.setIcon(new javax.swing.ImageIcon(getClass()
                            .getResource("/com/ijse/theaterbooking/view/images"
                                    + "/movie4.jpg")));
                }

            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE,
                    null, ex);
        }
    }//GEN-LAST:event_movieIDComboItemStateChanged

    private void mmDispMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mmDispMouseClicked
        String check = movieIDCombo.getSelectedItem().toString();
        if (!check.equals("Select")) {
            if (check.equals("mov1")) {
                try {
                    JFileChooser jFileChooser = new JFileChooser();
                    jFileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
                    int res = jFileChooser.showSaveDialog(MovieManage.this);
                    if (res == JFileChooser.APPROVE_OPTION) {
                        File file = jFileChooser.getSelectedFile();
                        byte b[] = new byte[(int) file.length()];
                        FileInputStream fin = new FileInputStream(file);
                        fin.read(b);
                        JOptionPane.showMessageDialog(this, "Do You Want To Replace");
                        ddas.setBackground(Color.green);
                        ddas.setText("Video Saved");
                        Path path = FileSystems.getDefault().getPath("E:\\IJSE\\J A V A\\3 rd Semester\\Main Projects\\Softaer Updates\\018\\Theater Ticket Booking\\TheaterBookingClient\\Movie4.MP4");
                        Files.deleteIfExists(path);
                        File nf = new File("E:\\IJSE\\J A V A\\3 rd Semester\\Main Projects\\Softaer Updates\\018\\Theater Ticket Booking\\TheaterBookingClient\\Movie1.MP4");
                        FileOutputStream fw = new FileOutputStream(nf);
                        fw.write(b);
                        fw.flush();
                        fw.close();
                        mmName = nf.getName();
                        System.out.println("movi Name" + mmName);
                    }

                } catch (IOException ex) {
                    Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

            if (check.equals("mov2")) {
                try {
                    JFileChooser jFileChooser = new JFileChooser();
                    jFileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
                    int res = jFileChooser.showSaveDialog(MovieManage.this);
                    if (res == JFileChooser.APPROVE_OPTION) {
                        File file = jFileChooser.getSelectedFile();
                        byte b[] = new byte[(int) file.length()];
                        FileInputStream fin = new FileInputStream(file);
                        fin.read(b);
                        JOptionPane.showMessageDialog(this, "Do You Want To Replace");
                        ddas.setBackground(Color.green);
                        ddas.setText("Video Saved");
                        Path path = FileSystems.getDefault().getPath("E:\\IJSE\\J A V A\\3 rd Semester\\Main Projects\\Softaer Updates\\018\\Theater Ticket Booking\\TheaterBookingClient\\Movie4.MP4");
                        Files.deleteIfExists(path);
                        File nf = new File("E:\\IJSE\\J A V A\\3 rd Semester\\Main Projects\\Softaer Updates\\018\\Theater Ticket Booking\\TheaterBookingClient\\Movie2.MP4");
                        FileOutputStream fw = new FileOutputStream(nf);
                        fw.write(b);
                        fw.flush();
                        fw.close();
                        mmName = nf.getName();
                        System.out.println("movi Name" + mmName);
                    }

                } catch (IOException ex) {
                    Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
            if (check.equals("mov3")) {
                try {
                    JFileChooser jFileChooser = new JFileChooser();
                    jFileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
                    int res = jFileChooser.showSaveDialog(MovieManage.this);
                    if (res == JFileChooser.APPROVE_OPTION) {
                        File file = jFileChooser.getSelectedFile();
                        byte b[] = new byte[(int) file.length()];
                        FileInputStream fin = new FileInputStream(file);
                        fin.read(b);
                        JOptionPane.showMessageDialog(this, "Do You Want To Replace");
                        ddas.setBackground(Color.green);
                        ddas.setText("Video Saved");;
                        Path path = FileSystems.getDefault().getPath("E:\\IJSE\\J A V A\\3 rd Semester\\Main Projects\\Softaer Updates\\018\\Theater Ticket Booking\\TheaterBookingClient\\Movie4.MP4");
                        Files.deleteIfExists(path);
                        File nf = new File("E:\\IJSE\\J A V A\\3 rd Semester\\Main Projects\\Softaer Updates\\018\\Theater Ticket Booking\\TheaterBookingClient\\Movie3.MP4");
                        FileOutputStream fw = new FileOutputStream(nf);
                        fw.write(b);
                        fw.flush();
                        fw.close();
                        mmName = nf.getName();
                        System.out.println("movi Name" + mmName);
                    }

                } catch (IOException ex) {
                    Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            if (check.equals("mov4")) {
                try {
                    JFileChooser jFileChooser = new JFileChooser();
                    jFileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
                    int res = jFileChooser.showSaveDialog(MovieManage.this);
                    if (res == JFileChooser.APPROVE_OPTION) {
                        File file = jFileChooser.getSelectedFile();
                        byte b[] = new byte[(int) file.length()];
                        FileInputStream fin = new FileInputStream(file);
                        fin.read(b);
                        JOptionPane.showMessageDialog(this, "Do You Want To Replace");
                        ddas.setBackground(Color.green);
                        ddas.setText("Video Saved");
                        Path path = FileSystems.getDefault().getPath("E:\\IJSE\\J A V A\\3 rd Semester\\Main Projects\\Softaer Updates\\018\\Theater Ticket Booking\\TheaterBookingClient\\Movie4.MP4");
                        Files.deleteIfExists(path);
                        File nf = new File("E:\\IJSE\\J A V A\\3 rd Semester\\Main Projects\\Softaer Updates\\018\\Theater Ticket Booking\\TheaterBookingClient\\Movie4.MP4");
                        FileOutputStream fw = new FileOutputStream(nf);
                        fw.write(b);
                        fw.flush();
                        fw.close();
                        mmName = nf.getName();

                    }

                } catch (IOException ex) {
                    Logger.getLogger(MovieManage.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please Select The MoviID First");
        }

    }//GEN-LAST:event_mmDispMouseClicked

    private void canselBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_canselBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_canselBActionPerformed

    private void updateBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateBActionPerformed

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        String check = movieIDCombo.getSelectedItem().toString();
        if (!check.equals("Select")) {
            if (check.equals("mov1")) {
                FirstFilm firstFilm = new FirstFilm();
                NativeLibrary.addSearchPath(RuntimeUtil.getLibVlcLibraryName(), "C:/Program Files/VideoLAN/VLC");
                Native.loadLibrary(RuntimeUtil.getLibVlcLibraryName(), LibVlc.class);

                mpf = new MediaPlayerFactory();
                emp = mpf.newEmbeddedMediaPlayer(new Win32FullScreenStrategy(firstFilm));
                emp.setVideoSurface(mpf.newVideoSurface(canva));

                emp.setEnableMouseInputHandling(true);
                emp.setEnableKeyInputHandling(true);

                String File = "Movie1.mp4";
                emp.prepareMedia(File);
                emp.play();
            }
            if (check.equals("mov2")) {
                FirstFilm firstFilm = new FirstFilm();
                NativeLibrary.addSearchPath(RuntimeUtil.getLibVlcLibraryName(), "C:/Program Files/VideoLAN/VLC");
                Native.loadLibrary(RuntimeUtil.getLibVlcLibraryName(), LibVlc.class);

                mpf = new MediaPlayerFactory();
                emp = mpf.newEmbeddedMediaPlayer(new Win32FullScreenStrategy(firstFilm));
                emp.setVideoSurface(mpf.newVideoSurface(canva));

                emp.setEnableMouseInputHandling(true);
                emp.setEnableKeyInputHandling(true);

                String File = "Movie2.mp4";
                emp.prepareMedia(File);
                emp.play();
            }
            if (check.equals("mov3")) {
                FirstFilm firstFilm = new FirstFilm();
                NativeLibrary.addSearchPath(RuntimeUtil.getLibVlcLibraryName(), "C:/Program Files/VideoLAN/VLC");
                Native.loadLibrary(RuntimeUtil.getLibVlcLibraryName(), LibVlc.class);

                mpf = new MediaPlayerFactory();
                emp = mpf.newEmbeddedMediaPlayer(new Win32FullScreenStrategy(firstFilm));
                emp.setVideoSurface(mpf.newVideoSurface(canva));

                emp.setEnableMouseInputHandling(true);
                emp.setEnableKeyInputHandling(true);

                String File = "Movie3.mp4";
                emp.prepareMedia(File);
                emp.play();
            }
            if (check.equals("mov4")) {
                FirstFilm firstFilm = new FirstFilm();
                NativeLibrary.addSearchPath(RuntimeUtil.getLibVlcLibraryName(), "C:/Program Files/VideoLAN/VLC");
                Native.loadLibrary(RuntimeUtil.getLibVlcLibraryName(), LibVlc.class);

                mpf = new MediaPlayerFactory();
                emp = mpf.newEmbeddedMediaPlayer(new Win32FullScreenStrategy(firstFilm));
                emp.setVideoSurface(mpf.newVideoSurface(canva));

                emp.setEnableMouseInputHandling(true);
                emp.setEnableKeyInputHandling(true);

                String File = "Movie4.mp4";
                emp.prepareMedia(File);
                emp.play();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Select Movie ID First");
        }


    }//GEN-LAST:event_jLabel8MouseClicked

    private void canvaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canvaMouseClicked

    }//GEN-LAST:event_canvaMouseClicked

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        emp.stop();
    }//GEN-LAST:event_jLabel11MouseClicked

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        emp.pause();
    }//GEN-LAST:event_jLabel10MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton canselB;
    private static java.awt.Canvas canva;
    private javax.swing.JLabel ddas;
    private javax.swing.JButton deleteB;
    private com.toedter.calendar.JDateChooser endDt;
    private javax.swing.JButton imageSave;
    private javax.swing.JLabel imageViewer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel mmDisp;
    private javax.swing.JComboBox movieIDCombo;
    private javax.swing.JLabel movieNa;
    private javax.swing.JTextField movieNameLabel;
    private javax.swing.JTextField movieTimeLabel;
    private javax.swing.JComboBox movieTypeCombo;
    private javax.swing.JButton saveB;
    private javax.swing.JPanel screen;
    private javax.swing.JButton updateB;
    // End of variables declaration//GEN-END:variables

}
